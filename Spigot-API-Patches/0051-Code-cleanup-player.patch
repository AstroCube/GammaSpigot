From 42e6bb6117161d39d3a76e651881695c2b6b4616 Mon Sep 17 00:00:00 2001
From: TomateDeveloper <ianfe@martina.com.co>
Date: Wed, 25 Dec 2019 12:26:20 -0500
Subject: [PATCH] Code cleanup player


diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 72736362..55b26573 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -39,7 +39,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @return the friendly name
      */
-    public String getDisplayName();
+    String getDisplayName();
 
     /**
      * Sets the "friendly" name to display of this player. This may include
@@ -50,14 +50,14 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param name The new display name.
      */
-    public void setDisplayName(String name);
+    void setDisplayName(String name);
 
     /**
      * Gets the name that is shown on the player list.
      *
      * @return the player list name
      */
-    public String getPlayerListName();
+    String getPlayerListName();
 
     /**
      * Sets the name that is shown on the in-game player list.
@@ -80,49 +80,49 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *     else
      * @throws IllegalArgumentException if the length of the name is too long
      */
-    public void setPlayerListName(String name);
+    void setPlayerListName(String name);
 
     /**
      * Set the target of the player's compass.
      *
      * @param loc Location to point to
      */
-    public void setCompassTarget(Location loc);
+    void setCompassTarget(Location loc);
 
     /**
      * Get the previously set compass target.
      *
      * @return location of the target
      */
-    public Location getCompassTarget();
+    Location getCompassTarget();
 
     /**
      * Gets the socket address of this player
      *
      * @return the player's address
      */
-    public InetSocketAddress getAddress();
+    InetSocketAddress getAddress();
 
     /**
      * Sends this sender a message raw
      *
      * @param message Message to be displayed
      */
-    public void sendRawMessage(String message);
+    void sendRawMessage(String message);
 
     /**
      * Kicks player with custom kick message.
      *
      * @param message kick message
      */
-    public void kickPlayer(String message);
+    void kickPlayer(String message);
 
     /**
      * Says a message (or runs a command).
      *
      * @param msg message to print
      */
-    public void chat(String msg);
+    void chat(String msg);
 
     /**
      * Makes the player perform the given command
@@ -130,42 +130,42 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param command Command to perform
      * @return true if the command was successful, otherwise false
      */
-    public boolean performCommand(String command);
+    boolean performCommand(String command);
 
     /**
      * Returns if the player is in sneak mode
      *
      * @return true if player is in sneak mode
      */
-    public boolean isSneaking();
+    boolean isSneaking();
 
     /**
      * Sets the sneak mode the player
      *
      * @param sneak true if player should appear sneaking
      */
-    public void setSneaking(boolean sneak);
+    void setSneaking(boolean sneak);
 
     /**
      * Gets whether the player is sprinting or not.
      *
      * @return true if player is sprinting.
      */
-    public boolean isSprinting();
+    boolean isSprinting();
 
     /**
      * Sets whether the player is sprinting or not.
      *
      * @param sprinting true if the player should be sprinting
      */
-    public void setSprinting(boolean sprinting);
+    void setSprinting(boolean sprinting);
 
     /**
      * Saves the players current location, health, inventory, motion, and
      * other information into the username.dat file, in the world/player
      * folder
      */
-    public void saveData();
+    void saveData();
 
     /**
      * Loads the players current location, health, inventory, motion, and
@@ -175,7 +175,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * Note: This will overwrite the players current inventory, health,
      * motion, etc, with the state from the saved dat file.
      */
-    public void loadData();
+    void loadData();
 
     /**
      * Sets whether the player is ignored as not sleeping. If everyone is
@@ -185,14 +185,14 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param isSleeping Whether to ignore.
      */
-    public void setSleepingIgnored(boolean isSleeping);
+    void setSleepingIgnored(boolean isSleeping);
 
     /**
      * Returns whether the player is sleeping ignored.
      *
      * @return Whether player is ignoring sleep.
      */
-    public boolean isSleepingIgnored();
+    boolean isSleepingIgnored();
 
     /**
      * Play a note for a player at a location. This requires a note block
@@ -205,7 +205,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated Magic value
      */
     @Deprecated
-    public void playNote(Location loc, byte instrument, byte note);
+    void playNote(Location loc, byte instrument, byte note);
 
     /**
      * Play a note for a player at a location. This requires a note block
@@ -216,7 +216,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param instrument The instrument
      * @param note The note
      */
-    public void playNote(Location loc, Instrument instrument, Note note);
+    void playNote(Location loc, Instrument instrument, Note note);
 
 
     /**
@@ -229,7 +229,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param volume The volume of the sound
      * @param pitch The pitch of the sound
      */
-    public void playSound(Location location, Sound sound, float volume, float pitch);
+    void playSound(Location location, Sound sound, float volume, float pitch);
 
     /**
      * Play a sound for a player at the location.
@@ -243,7 +243,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param volume the volume of the sound
      * @param pitch the pitch of the sound
      */
-    public void playSound(Location location, String sound, float volume, float pitch);
+    void playSound(Location location, String sound, float volume, float pitch);
 
     /**
      * Plays an effect to just this player.
@@ -254,7 +254,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated Magic value
      */
     @Deprecated
-    public void playEffect(Location loc, Effect effect, int data);
+    void playEffect(Location loc, Effect effect, int data);
 
     /**
      * Plays an effect to just this player.
@@ -264,7 +264,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param effect the {@link Effect}
      * @param data a data bit needed for some effects
      */
-    public <T> void playEffect(Location loc, Effect effect, T data);
+    <T> void playEffect(Location loc, Effect effect, T data);
 
     /**
      * Send a block change. This fakes a block change packet for a user at a
@@ -276,7 +276,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated Magic value
      */
     @Deprecated
-    public void sendBlockChange(Location loc, Material material, byte data);
+    void sendBlockChange(Location loc, Material material, byte data);
 
     /**
      * Send a chunk change. This fakes a chunk change packet for a user at a
@@ -296,7 +296,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated Magic value
      */
     @Deprecated
-    public boolean sendChunkChange(Location loc, int sx, int sy, int sz, byte[] data);
+    boolean sendChunkChange(Location loc, int sx, int sy, int sz, byte[] data);
 
     /**
      * Send a block change. This fakes a block change packet for a user at a
@@ -308,7 +308,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated Magic value
      */
     @Deprecated
-    public void sendBlockChange(Location loc, int material, byte data);
+    void sendBlockChange(Location loc, int material, byte data);
 
     /**
      * Send a sign change. This fakes a sign change packet for a user at
@@ -325,7 +325,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if location is null
      * @throws IllegalArgumentException if lines is non-null and has a length less than 4
      */
-    public void sendSignChange(Location loc, String[] lines) throws IllegalArgumentException;
+    void sendSignChange(Location loc, String[] lines) throws IllegalArgumentException;
 
     /**
      * Render a map and send it to the player in its entirety. This may be
@@ -333,7 +333,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param map The map to be sent
      */
-    public void sendMap(MapView map);
+    void sendMap(MapView map);
 
     // Paper start
     /**
@@ -341,14 +341,14 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param component the components to send
      */
-    public void sendMessage(net.md_5.bungee.api.chat.BaseComponent component);
+    void sendMessage(net.md_5.bungee.api.chat.BaseComponent component);
 
     /**
      * Sends an array of components as a single message to the player
      *
      * @param components the components to send
      */
-    public void sendMessage(net.md_5.bungee.api.chat.BaseComponent... components);
+    void sendMessage(net.md_5.bungee.api.chat.BaseComponent... components);
 
     /**
      * Set the text displayed in the player list header and footer for this player
@@ -356,7 +356,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param header content for the top of the player list
      * @param footer content for the bottom of the player list
      */
-    public void setPlayerListHeaderFooter(net.md_5.bungee.api.chat.BaseComponent[] header, net.md_5.bungee.api.chat.BaseComponent[] footer);
+    void setPlayerListHeaderFooter(net.md_5.bungee.api.chat.BaseComponent[] header, net.md_5.bungee.api.chat.BaseComponent[] footer);
 
     /**
      * Set the text displayed in the player list header and footer for this player
@@ -364,7 +364,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param header content for the top of the player list
      * @param footer content for the bottom of the player list
      */
-    public void setPlayerListHeaderFooter(net.md_5.bungee.api.chat.BaseComponent header, net.md_5.bungee.api.chat.BaseComponent footer);
+    void setPlayerListHeaderFooter(net.md_5.bungee.api.chat.BaseComponent header, net.md_5.bungee.api.chat.BaseComponent footer);
 
     /**
      * Update the times for titles displayed to the player
@@ -375,35 +375,35 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated Use {@link #updateTitle(Title)}
      */
     @Deprecated
-    public void setTitleTimes(int fadeInTicks, int stayTicks, int fadeOutTicks);
+    void setTitleTimes(int fadeInTicks, int stayTicks, int fadeOutTicks);
 
     /**
      * Update the subtitle of titles displayed to the player
      * @deprecated Use {@link #updateTitle(Title)}
      */
     @Deprecated
-    public void setSubtitle(net.md_5.bungee.api.chat.BaseComponent[] subtitle);
+    void setSubtitle(net.md_5.bungee.api.chat.BaseComponent[] subtitle);
 
     /**
      * Update the subtitle of titles displayed to the player
      * @deprecated Use {@link #updateTitle(Title)}
      */
     @Deprecated
-    public void setSubtitle(net.md_5.bungee.api.chat.BaseComponent subtitle);
+    void setSubtitle(net.md_5.bungee.api.chat.BaseComponent subtitle);
 
     /**
      * Show the given title to the player, along with the last subtitle set, using the last set times
      * @deprecated Use {@link #sendTitle(Title)} or {@link #updateTitle(Title)}
      */
     @Deprecated
-    public void showTitle(net.md_5.bungee.api.chat.BaseComponent[] title);
+    void showTitle(net.md_5.bungee.api.chat.BaseComponent[] title);
 
     /**
      * Show the given title to the player, along with the last subtitle set, using the last set times
      * @deprecated Use {@link #sendTitle(Title)} or {@link #updateTitle(Title)}
      */
     @Deprecated
-    public void showTitle(net.md_5.bungee.api.chat.BaseComponent title);
+    void showTitle(net.md_5.bungee.api.chat.BaseComponent title);
 
     /**
      * Show the given title and subtitle to the player using the given times
@@ -416,7 +416,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated Use {@link #sendTitle(Title)} or {@link #updateTitle(Title)}
      */
     @Deprecated
-    public void showTitle(net.md_5.bungee.api.chat.BaseComponent[] title, net.md_5.bungee.api.chat.BaseComponent[] subtitle, int fadeInTicks, int stayTicks, int fadeOutTicks);
+    void showTitle(net.md_5.bungee.api.chat.BaseComponent[] title, net.md_5.bungee.api.chat.BaseComponent[] subtitle, int fadeInTicks, int stayTicks, int fadeOutTicks);
 
     /**
      * Show the given title and subtitle to the player using the given times
@@ -429,7 +429,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated Use {@link #sendTitle(Title)} or {@link #updateTitle(Title)}
      */
     @Deprecated
-    public void showTitle(net.md_5.bungee.api.chat.BaseComponent title, net.md_5.bungee.api.chat.BaseComponent subtitle, int fadeInTicks, int stayTicks, int fadeOutTicks);
+    void showTitle(net.md_5.bungee.api.chat.BaseComponent title, net.md_5.bungee.api.chat.BaseComponent subtitle, int fadeInTicks, int stayTicks, int fadeOutTicks);
 
     /**
      * Show the title to the player, overriding any previously displayed title.
@@ -454,7 +454,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
     /**
      * Hide any title that is currently visible to the player
      */
-    public void hideTitle();
+    void hideTitle();
     // Paper end
 
     /**
@@ -462,7 +462,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      */
     //@Deprecated // Spigot - undeprecate
-    public void updateInventory();
+    void updateInventory();
 
     /**
      * Awards the given achievement and any parent achievements that the
@@ -471,7 +471,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param achievement Achievement to award
      * @throws IllegalArgumentException if achievement is null
      */
-    public void awardAchievement(Achievement achievement);
+    void awardAchievement(Achievement achievement);
 
     /**
      * Removes the given achievement and any children achievements that the
@@ -480,7 +480,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param achievement Achievement to remove
      * @throws IllegalArgumentException if achievement is null
      */
-    public void removeAchievement(Achievement achievement);
+    void removeAchievement(Achievement achievement);
 
     /**
      * Gets whether this player has the given achievement.
@@ -489,7 +489,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @return whether the player has the achievement
      * @throws IllegalArgumentException if achievement is null
      */
-    public boolean hasAchievement(Achievement achievement);
+    boolean hasAchievement(Achievement achievement);
 
     /**
      * Increments the given statistic for this player.
@@ -502,7 +502,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the statistic requires an
      *     additional parameter
      */
-    public void incrementStatistic(Statistic statistic) throws IllegalArgumentException;
+    void incrementStatistic(Statistic statistic) throws IllegalArgumentException;
 
     /**
      * Decrements the given statistic for this player.
@@ -515,7 +515,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the statistic requires an
      *     additional parameter
      */
-    public void decrementStatistic(Statistic statistic) throws IllegalArgumentException;
+    void decrementStatistic(Statistic statistic) throws IllegalArgumentException;
 
     /**
      * Increments the given statistic for this player.
@@ -527,7 +527,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the statistic requires an
      *     additional parameter
      */
-    public void incrementStatistic(Statistic statistic, int amount) throws IllegalArgumentException;
+    void incrementStatistic(Statistic statistic, int amount) throws IllegalArgumentException;
 
     /**
      * Decrements the given statistic for this player.
@@ -539,7 +539,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the statistic requires an
      *     additional parameter
      */
-    public void decrementStatistic(Statistic statistic, int amount) throws IllegalArgumentException;
+    void decrementStatistic(Statistic statistic, int amount) throws IllegalArgumentException;
 
     /**
      * Sets the given statistic for this player.
@@ -551,7 +551,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the statistic requires an
      *     additional parameter
      */
-    public void setStatistic(Statistic statistic, int newValue) throws IllegalArgumentException;
+    void setStatistic(Statistic statistic, int newValue) throws IllegalArgumentException;
 
     /**
      * Gets the value of the given statistic for this player.
@@ -562,7 +562,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the statistic requires an
      *     additional parameter
      */
-    public int getStatistic(Statistic statistic) throws IllegalArgumentException;
+    int getStatistic(Statistic statistic) throws IllegalArgumentException;
 
     /**
      * Increments the given statistic for this player for the given material.
@@ -577,7 +577,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void incrementStatistic(Statistic statistic, Material material) throws IllegalArgumentException;
+    void incrementStatistic(Statistic statistic, Material material) throws IllegalArgumentException;
 
     /**
      * Decrements the given statistic for this player for the given material.
@@ -592,7 +592,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void decrementStatistic(Statistic statistic, Material material) throws IllegalArgumentException;
+    void decrementStatistic(Statistic statistic, Material material) throws IllegalArgumentException;
 
     /**
      * Gets the value of the given statistic for this player.
@@ -605,7 +605,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public int getStatistic(Statistic statistic, Material material) throws IllegalArgumentException;
+    int getStatistic(Statistic statistic, Material material) throws IllegalArgumentException;
 
     /**
      * Increments the given statistic for this player for the given material.
@@ -619,7 +619,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void incrementStatistic(Statistic statistic, Material material, int amount) throws IllegalArgumentException;
+    void incrementStatistic(Statistic statistic, Material material, int amount) throws IllegalArgumentException;
 
     /**
      * Decrements the given statistic for this player for the given material.
@@ -633,7 +633,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void decrementStatistic(Statistic statistic, Material material, int amount) throws IllegalArgumentException;
+    void decrementStatistic(Statistic statistic, Material material, int amount) throws IllegalArgumentException;
 
     /**
      * Sets the given statistic for this player for the given material.
@@ -647,7 +647,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void setStatistic(Statistic statistic, Material material, int newValue) throws IllegalArgumentException;
+    void setStatistic(Statistic statistic, Material material, int newValue) throws IllegalArgumentException;
 
     /**
      * Increments the given statistic for this player for the given entity.
@@ -662,7 +662,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void incrementStatistic(Statistic statistic, EntityType entityType) throws IllegalArgumentException;
+    void incrementStatistic(Statistic statistic, EntityType entityType) throws IllegalArgumentException;
 
     /**
      * Decrements the given statistic for this player for the given entity.
@@ -677,7 +677,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void decrementStatistic(Statistic statistic, EntityType entityType) throws IllegalArgumentException;
+    void decrementStatistic(Statistic statistic, EntityType entityType) throws IllegalArgumentException;
 
     /**
      * Gets the value of the given statistic for this player.
@@ -690,7 +690,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public int getStatistic(Statistic statistic, EntityType entityType) throws IllegalArgumentException;
+    int getStatistic(Statistic statistic, EntityType entityType) throws IllegalArgumentException;
 
     /**
      * Increments the given statistic for this player for the given entity.
@@ -704,7 +704,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void incrementStatistic(Statistic statistic, EntityType entityType, int amount) throws IllegalArgumentException;
+    void incrementStatistic(Statistic statistic, EntityType entityType, int amount) throws IllegalArgumentException;
 
     /**
      * Decrements the given statistic for this player for the given entity.
@@ -718,7 +718,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void decrementStatistic(Statistic statistic, EntityType entityType, int amount);
+    void decrementStatistic(Statistic statistic, EntityType entityType, int amount);
 
     /**
      * Sets the given statistic for this player for the given entity.
@@ -732,7 +732,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if the given parameter is not valid
      *     for the statistic
      */
-    public void setStatistic(Statistic statistic, EntityType entityType, int newValue);
+    void setStatistic(Statistic statistic, EntityType entityType, int newValue);
 
     /**
      * Sets the current time on the player's client. When relative is true the
@@ -749,14 +749,14 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param relative When true the player time is kept relative to its world
      *     time.
      */
-    public void setPlayerTime(long time, boolean relative);
+    void setPlayerTime(long time, boolean relative);
 
     /**
      * Returns the player's current timestamp.
      *
      * @return The player's time
      */
-    public long getPlayerTime();
+    long getPlayerTime();
 
     /**
      * Returns the player's current time offset relative to server time, or
@@ -764,7 +764,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @return The player's time
      */
-    public long getPlayerTimeOffset();
+    long getPlayerTimeOffset();
 
     /**
      * Returns true if the player's time is relative to the server time,
@@ -773,7 +773,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @return true if the player's time is relative to the server time.
      */
-    public boolean isPlayerTimeRelative();
+    boolean isPlayerTimeRelative();
 
     /**
      * Restores the normal condition where the player's time is synchronized
@@ -781,7 +781,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * <p>
      * Equivalent to calling setPlayerTime(0, true).
      */
-    public void resetPlayerTime();
+    void resetPlayerTime();
 
     /**
      * Sets the type of weather the player will see.  When used, the weather
@@ -790,7 +790,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param type The WeatherType enum type the player should experience
      */
-    public void setPlayerWeather(WeatherType type);
+    void setPlayerWeather(WeatherType type);
 
     /**
      * Returns the type of weather the player is currently experiencing.
@@ -798,20 +798,20 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @return The WeatherType that the player is currently experiencing or
      *     null if player is seeing server weather.
      */
-    public WeatherType getPlayerWeather();
+    WeatherType getPlayerWeather();
 
     /**
      * Restores the normal condition where the player's weather is controlled
      * by server conditions.
      */
-    public void resetPlayerWeather();
+    void resetPlayerWeather();
 
     /**
      * Gives the player the amount of experience specified.
      *
      * @param amount Exp amount to give
      */
-    public void giveExp(int amount);
+    void giveExp(int amount);
 
     /**
      * Gives the player the amount of experience levels specified. Levels can
@@ -819,7 +819,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param amount amount of experience levels to give or take
      */
-    public void giveExpLevels(int amount);
+    void giveExpLevels(int amount);
 
     /**
      * Gets the players current experience points towards the next level.
@@ -828,7 +828,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @return Current experience points
      */
-    public float getExp();
+    float getExp();
 
     /**
      * Sets the players current experience points towards the next level
@@ -837,35 +837,35 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param exp New experience points
      */
-    public void setExp(float exp);
+    void setExp(float exp);
 
     /**
      * Gets the players current experience level
      *
      * @return Current experience level
      */
-    public int getLevel();
+    int getLevel();
 
     /**
      * Sets the players current experience level
      *
      * @param level New experience level
      */
-    public void setLevel(int level);
+    void setLevel(int level);
 
     /**
      * Gets the players total experience points
      *
      * @return Current total experience points
      */
-    public int getTotalExperience();
+    int getTotalExperience();
 
     /**
      * Sets the players current experience level
      *
      * @param exp New experience level
      */
-    public void setTotalExperience(int exp);
+    void setTotalExperience(int exp);
 
     /**
      * Gets the players current exhaustion level.
@@ -876,14 +876,14 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @return Exhaustion level
      */
-    public float getExhaustion();
+    float getExhaustion();
 
     /**
      * Sets the players current exhaustion level
      *
      * @param value Exhaustion level
      */
-    public void setExhaustion(float value);
+    void setExhaustion(float value);
 
     /**
      * Gets the players current saturation level.
@@ -893,28 +893,28 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @return Saturation level
      */
-    public float getSaturation();
+    float getSaturation();
 
     /**
      * Sets the players current saturation level
      *
      * @param value Saturation level
      */
-    public void setSaturation(float value);
+    void setSaturation(float value);
 
     /**
      * Gets the players current food level
      *
      * @return Food level
      */
-    public int getFoodLevel();
+    int getFoodLevel();
 
     /**
      * Sets the players current food level
      *
      * @param value New food level
      */
-    public void setFoodLevel(int value);
+    void setFoodLevel(int value);
 
     /**
      * Gets the Location where the player will spawn at their bed, null if
@@ -922,14 +922,14 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @return Bed Spawn Location if bed exists, otherwise null.
      */
-    public Location getBedSpawnLocation();
+    Location getBedSpawnLocation();
 
     /**
      * Sets the Location where the player will spawn at their bed.
      *
      * @param location where to set the respawn location
      */
-    public void setBedSpawnLocation(Location location);
+    void setBedSpawnLocation(Location location);
 
     /**
      * Sets the Location where the player will spawn at their bed.
@@ -938,7 +938,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param force whether to forcefully set the respawn location even if a
      *     valid bed is not present
      */
-    public void setBedSpawnLocation(Location location, boolean force);
+    void setBedSpawnLocation(Location location, boolean force);
 
     /**
      * Determines if the Player is allowed to fly via jump key double-tap like
@@ -946,7 +946,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @return True if the player is allowed to fly.
      */
-    public boolean getAllowFlight();
+    boolean getAllowFlight();
 
     /**
      * Sets if the Player is allowed to fly via jump key double-tap like in
@@ -954,21 +954,21 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param flight If flight should be allowed.
      */
-    public void setAllowFlight(boolean flight);
+    void setAllowFlight(boolean flight);
 
     /**
      * Hides a player from this player
      *
      * @param player Player to hide
      */
-    public void hidePlayer(Player player);
+    void hidePlayer(Player player);
 
     /**
      * Allows this player to see a player that was previously hidden
      *
      * @param player Player to show
      */
-    public void showPlayer(Player player);
+    void showPlayer(Player player);
 
     /**
      * Checks to see if a player has been hidden from this player
@@ -977,7 +977,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @return True if the provided player is not being hidden from this
      *     player
      */
-    public boolean canSee(Player player);
+    boolean canSee(Player player);
 
     /**
      * Checks to see if this player is currently standing on a block. This
@@ -989,21 +989,21 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *     org.bukkit.entity.Entity#isOnGround()}
      */
     @Deprecated
-    public boolean isOnGround();
+    boolean isOnGround();
 
     /**
      * Checks to see if this player is currently flying or not.
      *
      * @return True if the player is flying, else false.
      */
-    public boolean isFlying();
+    boolean isFlying();
 
     /**
      * Makes this player start or stop flying.
      *
      * @param value True to fly.
      */
-    public void setFlying(boolean value);
+    void setFlying(boolean value);
 
     /**
      * Sets the speed at which a client will fly. Negative values indicate
@@ -1013,7 +1013,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException If new speed is less than -1 or
      *     greater than 1
      */
-    public void setFlySpeed(float value) throws IllegalArgumentException;
+    void setFlySpeed(float value) throws IllegalArgumentException;
 
     /**
      * Sets the speed at which a client will walk. Negative values indicate
@@ -1023,21 +1023,21 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException If new speed is less than -1 or
      *     greater than 1
      */
-    public void setWalkSpeed(float value) throws IllegalArgumentException;
+    void setWalkSpeed(float value) throws IllegalArgumentException;
 
     /**
      * Gets the current allowed speed that a client can fly.
      *
      * @return The current allowed speed, from -1 to 1
      */
-    public float getFlySpeed();
+    float getFlySpeed();
 
     /**
      * Gets the current allowed speed that a client can walk.
      *
      * @return The current allowed speed, from -1 to 1
      */
-    public float getWalkSpeed();
+    float getWalkSpeed();
 
     /**
      * Request that the player's client download and switch texture packs.
@@ -1068,7 +1068,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *     should use {@link #setResourcePack(String)}.
      */
     @Deprecated
-    public void setTexturePack(String url);
+    void setTexturePack(String url);
 
     /**
      * Request that the player's client download and switch resource packs.
@@ -1097,14 +1097,14 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException Thrown if the URL is too long. The
      *     length restriction is an implementation specific arbitrary value.
      */
-    public void setResourcePack(String url);
+    void setResourcePack(String url);
 
     /**
      * Gets the Scoreboard displayed to this player
      *
      * @return The current scoreboard seen by this player
      */
-    public Scoreboard getScoreboard();
+    Scoreboard getScoreboard();
 
     /**
      * Sets the player's visible Scoreboard.
@@ -1116,7 +1116,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalStateException if this is a player that is not logged
      *     yet or has logged out
      */
-    public void setScoreboard(Scoreboard scoreboard) throws IllegalArgumentException, IllegalStateException;
+    void setScoreboard(Scoreboard scoreboard) throws IllegalArgumentException, IllegalStateException;
 
     /**
      * Gets if the client is displayed a 'scaled' health, that is, health on a
@@ -1125,7 +1125,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @return if client health display is scaled
      * @see Player#setHealthScaled(boolean)
      */
-    public boolean isHealthScaled();
+    boolean isHealthScaled();
 
     /**
      * Sets if the client is displayed a 'scaled' health, that is, health on a
@@ -1136,7 +1136,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * @param scale if the client health display is scaled
      */
-    public void setHealthScaled(boolean scale);
+    void setHealthScaled(boolean scale);
 
     /**
      * Sets the number to scale health to for the client; this will also
@@ -1150,7 +1150,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalArgumentException if scale is {@link Double#NaN}
      * @throws IllegalArgumentException if scale is too high
      */
-    public void setHealthScale(double scale) throws IllegalArgumentException;
+    void setHealthScale(double scale) throws IllegalArgumentException;
 
     /**
      * Gets the number that health is scaled to for the client.
@@ -1160,7 +1160,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @see Player#setHealthScale(double)
      * @see Player#setHealthScaled(boolean)
      */
-    public double getHealthScale();
+    double getHealthScale();
 
     /**
      * Gets the entity which is followed by the camera when in
@@ -1169,7 +1169,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @return the followed entity, or null if not in spectator mode or not
      * following a specific entity.
      */
-    public Entity getSpectatorTarget();
+    Entity getSpectatorTarget();
 
     /**
      * Sets the entity which is followed by the camera when in
@@ -1179,7 +1179,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @throws IllegalStateException if the player is not in
      * {@link GameMode#SPECTATOR}
      */
-    public void setSpectatorTarget(Entity entity);
+    void setSpectatorTarget(Entity entity);
 
     /**
      * Sends a title and a subtitle message to the player. If either of these
@@ -1193,26 +1193,26 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @deprecated API subject to change
      */
     @Deprecated
-    public void sendTitle(String title, String subtitle);
+    void sendTitle(String title, String subtitle);
 
     /**
      * Resets the title displayed to the player.
      */
     // Paper - Undeprecate
-    public void resetTitle();
+    void resetTitle();
 
-    public void setDisguisedName(@Nullable String disguisedName);
+    void setDisguisedName(@Nullable String disguisedName);
     @Nullable
-    public String getDisguisedName();
+    String getDisguisedName();
 
-    public void setDisguisedSkin(@Nullable String base64Skin);
+    void setDisguisedSkin(@Nullable String base64Skin);
     @Nullable
-    public String getDisguisedSkin();
+    String getDisguisedSkin();
 
-    public boolean isDisguised();
+    boolean isDisguised();
 
     // Spigot start
-    public class Spigot extends Entity.Spigot
+    class Spigot extends Entity.Spigot
     {
 
         /**
-- 
2.22.0.windows.1

