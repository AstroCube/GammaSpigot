From a267522ba77fe1274d99f1a023e3a0cdf0898eae Mon Sep 17 00:00:00 2001
From: TomateDeveloper <ianfe@martina.com.co>
Date: Wed, 8 Jan 2020 23:10:15 -0500
Subject: [PATCH] Updated Jukebox bugs


diff --git a/src/main/java/org/bukkit/craftbukkit/jukebox/player/CraftSongPlayer.java b/src/main/java/org/bukkit/craftbukkit/jukebox/player/CraftSongPlayer.java
index 3eb1f8ba8..48f72606d 100644
--- a/src/main/java/org/bukkit/craftbukkit/jukebox/player/CraftSongPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/jukebox/player/CraftSongPlayer.java
@@ -1,7 +1,6 @@
 package org.bukkit.craftbukkit.jukebox.player;
 
 import org.bukkit.Bukkit;
-import org.bukkit.craftbukkit.jukebox.NoteBlockPlayerMain;
 import org.bukkit.event.jukebox.SongDestroyingEvent;
 import org.bukkit.event.jukebox.SongEndEvent;
 import org.bukkit.event.jukebox.SongStoppedEvent;
@@ -162,13 +161,6 @@ public abstract class CraftSongPlayer implements SongPlayer {
         synchronized (this) {
             if (!playerList.contains(p.getName())) {
                 playerList.add(p.getName());
-                ArrayList<CraftSongPlayer> songs = NoteBlockPlayerMain.plugin.playingSongs
-                        .get(p.getName());
-                if (songs == null) {
-                    songs = new ArrayList<>();
-                }
-                songs.add(this);
-                NoteBlockPlayerMain.plugin.playingSongs.put(p.getName(), songs);
             }
         }
     }
@@ -241,13 +233,6 @@ public abstract class CraftSongPlayer implements SongPlayer {
     public void removePlayer(Player p) {
         synchronized (this) {
             playerList.remove(p.getName());
-            if (NoteBlockPlayerMain.plugin.playingSongs.get(p.getName()) == null) {
-                return;
-            }
-            ArrayList<CraftSongPlayer> songs = new ArrayList<>(
-                    NoteBlockPlayerMain.plugin.playingSongs.get(p.getName()));
-            songs.remove(this);
-            NoteBlockPlayerMain.plugin.playingSongs.put(p.getName(), songs);
             if (playerList.isEmpty() && autoDestroy) {
                 SongEndEvent event = new SongEndEvent(this);
                 Bukkit.getPluginManager().callEvent(event);
diff --git a/src/main/java/org/bukkit/craftbukkit/jukebox/player/NoteBlockSongPlayer.java b/src/main/java/org/bukkit/craftbukkit/jukebox/player/NoteBlockSongPlayer.java
index 2820e6151..18a0298a0 100644
--- a/src/main/java/org/bukkit/craftbukkit/jukebox/player/NoteBlockSongPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/jukebox/player/NoteBlockSongPlayer.java
@@ -1,14 +1,13 @@
 package org.bukkit.craftbukkit.jukebox.player;
 
-import net.seocraft.jukebox.*;
-import net.seocraft.jukebox.instruments.Instrument;
-import net.seocraft.jukebox.instruments.NotePitch;
-import net.seocraft.jukebox.instruments.partial.Layer;
-import net.seocraft.jukebox.instruments.partial.Note;
-import net.seocraft.jukebox.instruments.partial.Song;
 import org.bukkit.Material;
 import org.bukkit.block.Block;
 import org.bukkit.entity.Player;
+import org.bukkit.jukebox.instruments.Instrument;
+import org.bukkit.jukebox.instruments.NotePitch;
+import org.bukkit.jukebox.instruments.partial.Layer;
+import org.bukkit.jukebox.instruments.partial.Note;
+import org.bukkit.jukebox.instruments.partial.Song;
 
 public class NoteBlockSongPlayer extends CraftSongPlayer {
 
@@ -31,7 +30,7 @@ public class NoteBlockSongPlayer extends CraftSongPlayer {
         if (noteBlock.getType() != Material.NOTE_BLOCK) return;
         if (!p.getWorld().getName().equals(noteBlock.getWorld().getName())) return;
 
-        byte playerVolume = NoteBlockPlayerMain.getPlayerVolume(p);
+        byte playerVolume = p.getPlayerVolume();
 
         for (Layer l : getSong().getLayerHashMap().values()) {
             Note note = l.getNote(tick);
diff --git a/src/main/java/org/bukkit/craftbukkit/jukebox/player/PositionSongPlayer.java b/src/main/java/org/bukkit/craftbukkit/jukebox/player/PositionSongPlayer.java
index 89043c795..c1f166717 100644
--- a/src/main/java/org/bukkit/craftbukkit/jukebox/player/PositionSongPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/jukebox/player/PositionSongPlayer.java
@@ -1,13 +1,12 @@
 package org.bukkit.craftbukkit.jukebox.player;
 
-import net.seocraft.jukebox.*;
-import net.seocraft.jukebox.instruments.Instrument;
-import net.seocraft.jukebox.instruments.NotePitch;
-import net.seocraft.jukebox.instruments.partial.Layer;
-import net.seocraft.jukebox.instruments.partial.Note;
-import net.seocraft.jukebox.instruments.partial.Song;
 import org.bukkit.Location;
 import org.bukkit.entity.Player;
+import org.bukkit.jukebox.instruments.Instrument;
+import org.bukkit.jukebox.instruments.NotePitch;
+import org.bukkit.jukebox.instruments.partial.Layer;
+import org.bukkit.jukebox.instruments.partial.Note;
+import org.bukkit.jukebox.instruments.partial.Song;
 
 public class PositionSongPlayer extends CraftSongPlayer {
 
@@ -29,7 +28,7 @@ public class PositionSongPlayer extends CraftSongPlayer {
     public void playTick(Player p, int tick) {
         if (!p.getWorld().getName().equals(targetLocation.getWorld().getName())) return;
 
-        byte playerVolume = NoteBlockPlayerMain.getPlayerVolume(p);
+        byte playerVolume = p.getPlayerVolume();
 
         for (Layer l : getSong().getLayerHashMap().values()) {
             Note note = l.getNote(tick);
-- 
2.22.0.windows.1

